- name: Uninstall Windows Defender (Windows Server)
  when: ansible_os_installation_type != 'Client'
  block:
    - name: Uninstall Windows Defender
      ansible.windows.win_feature:
        name: Windows-Defender
        state: absent
      register: win_feature
    - name: Reboot
      when: win_feature.reboot_required
      ansible.windows.win_reboot:

- name: Partial disable Windows Defender (Windows Client)
  when: ansible_os_installation_type == 'Client'
  block:
    - name: Exclude Drives
      register: defender_exclude_drives
      ansible.windows.win_powershell:
        script: |
          Set-StrictMode -Version Latest
          $ErrorActionPreference = 'Stop'
          $ProgressPreference = 'SilentlyContinue'
          $Ansible.Changed = $false
          $expectedExclusionPath = @('C:\', 'D:\')
          $settings = Get-MpPreference
          if (($settings.ExclusionPath -join '|') -ne ($expectedExclusionPath -join '|')) {
            Set-MpPreference `
              -ExclusionPath $expectedExclusionPath
            $Ansible.Changed = $true
          }
          # NB Set-MpPreference -DisableRealtimeMonitoring $true does not seem
          #    to work anymore... so we set a policy.
    - name: Disable Realtime Monitoring
      register: defender_realtime_monitoring
      ansible.windows.win_regedit:
        path: HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender\Real-Time Protection
        name: DisableRealtimeMonitoring
        data: 1
        type: dword
    # NB we can no longer disable most of Defender in Windows Client. For
    #    example, the following setting keeps getting reset to the default
    #    value by the "Tamper Protection" feature that prevents non-os
    #    applications from changing these settings. if you really want to
    #    permanently nuking defender, see:
    #     https://github.com/jeremybeaume/tools/blob/master/disable-defender.ps1
    # - name: Disable Anti-Spyware
    #   register: defender_anti_spyware
    #   ansible.windows.win_regedit:
    #     path: HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender
    #     name: DisableAntiSpyware
    #     data: 1
    #     type: dword
    - name: Reboot
      when: >
        defender_exclude_drives.changed or
        defender_realtime_monitoring.changed
      ansible.windows.win_reboot:

- name: Install Windows Updates
  # see https://docs.ansible.com/ansible/latest/collections/ansible/windows/win_updates_module.html
  ansible.windows.win_updates:
    log_path: C:\Windows\Temp\ansible_win_updates.log
    reboot: true
    skip_optional: true
    category_names:
      - CriticalUpdates
      - DefinitionUpdates
      - SecurityUpdates
      - UpdateRollups
      - Updates

- name: Disable Fast Startup
  ansible.windows.win_regedit:
    # see powercfg.exe -a
    # see the Shutdown settings in the Windows Control Panel at Hardware and Sound\Power Options\System Settings.
    path: HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Power
    name: HiberbootEnabled
    data: 0
    type: dword

- name: Set preferred languages
  win_user_languages: # noqa fqcn[action]
    languages:
      - en-US
      - pt-PT

# - name: Set keyboard layout
#   win_user_keyboard:
#     language: pt-PT

- name: Set region
  community.windows.win_region:
    location: 193           # Portugal (193). See https://learn.microsoft.com/en-us/windows/win32/intl/table-of-geographical-locations
    format: pt-PT           # date format, number format, etc.
    unicode_language: en-US # UI language.
    copy_settings: true

- name: Set timezone
  community.windows.win_timezone:
    timezone: GMT Standard Time

- name: Set visual effects
  win_visual_effects: # noqa fqcn[action]
    show_shadows_under_windows: true
    show_translucent_selection_rectangle: true
    show_window_contents_while_dragging: true
    smooth_edges_of_screen_fonts: true

- name: Disable Animation Effects
  ansible.windows.win_powershell:
    script: |
      Set-StrictMode -Version Latest
      $ErrorActionPreference = 'Stop'
      $ProgressPreference = 'SilentlyContinue'
      Add-Type @'
      using System;
      using Microsoft.Win32;
      public static class Animations
      {
        private const ulong ValueWhenDisabled = 0x1080071290uL; // 70867423888
        private const ulong ValueWhenEnabled  = 0x1280071E9EuL; // 79457361566
        private const ulong ValueMask = ValueWhenDisabled ^ ValueWhenEnabled;
        private static bool Enabled(ulong value)
        {
          return (value & ValueMask) == ValueMask;
        }
        private static ulong Enable(ulong value)
        {
          return value | ValueMask;
        }
        private static ulong Disable(ulong value)
        {
          return value & ~ValueMask;
        }
        public static bool Set(bool enable)
        {
          const string keyName = @"HKEY_CURRENT_USER\Control Panel\Desktop";
          const string valueName = @"UserPreferencesMask";
          var valueBytes = (byte[])Registry.GetValue(keyName, valueName, null);
          var value = BitConverter.ToUInt64(valueBytes, 0);
          if (Enabled(value) == enable)
          {
            return false;
          }
          var newValue = enable ? Enable(value) : Disable(value);
          var newValueBytes = BitConverter.GetBytes(newValue);
          Registry.SetValue(keyName, valueName, newValueBytes);
          return true;
        }
      }
      '@
      $Ansible.Changed = [Animations]::Set($false)

- name: Show hidden files
  ansible.windows.win_regedit:
    path: HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced
    name: Hidden
    data: 1
    type: dword

- name: Show protected operating system files
  ansible.windows.win_regedit:
    path: HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced
    name: ShowSuperHidden
    data: 1
    type: dword

- name: Show file extensions
  ansible.windows.win_regedit:
    path: HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced
    name: HideFileExt
    data: 0
    type: dword

- name: Hide the search button
  ansible.windows.win_regedit:
    path: HKCU:\Software\Microsoft\Windows\CurrentVersion\Search
    name: SearchboxTaskbarMode
    data: 0
    type: dword

- name: Hide the task view button
  ansible.windows.win_regedit:
    path: HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced
    name: ShowTaskViewButton
    data: 0
    type: dword

- name: Never combine the taskbar buttons
  # possibe values:
  #   0: always combine and hide labels (default)
  #   1: combine when taskbar is full
  #   2: never combine
  ansible.windows.win_regedit:
    path: HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced
    name: TaskbarGlomLevel
    data: 2
    type: dword

- name: Customize the Windows 11 Taskbar
  when: ansible_distribution_version is version('10.0.22000.0', '>=')
  block:
    - name: Align to the left
      ansible.windows.win_regedit:
        path: HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced
        name: TaskbarAl
        data: 0
        type: dword
    - name: Hide the Widgets button
      ansible.windows.win_regedit:
        path: HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced
        name: TaskbarDa
        data: 0
        type: dword
    - name: Hide the Chat button
      ansible.windows.win_regedit:
        path: HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced
        name: TaskbarMn
        data: 0
        type: dword
    - name: Hide the built-in buttons (Edge, Store, etc.)
      ansible.windows.win_regedit:
        path: HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Taskband
        name: Favorites
        state: absent

- name: Display full path in the title bar
  ansible.windows.win_regedit:
    path: HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\CabinetState
    name: FullPath
    data: 1
    type: dword

- name: Disable Cortana
  ansible.windows.win_regedit:
    path: HKLM:\Software\Policies\Microsoft\Windows\Windows Search
    name: AllowCortana
    data: 0
    type: dword

- name: Disable Web search
  ansible.windows.win_regedit:
    path: HKLM:\Software\Policies\Microsoft\Windows\Windows Search
    name: ConnectedSearchUseWeb
    data: 0
    type: dword

- name: Install the NuGet PowerShell Package Provider
  ansible.windows.win_powershell:
    script: |
      Set-StrictMode -Version Latest
      $ErrorActionPreference = 'Stop'
      $ProgressPreference = 'SilentlyContinue'
      $Ansible.Changed = $false
      $nugetPackageProvider = Get-PackageProvider | Where-Object {$_.Name -eq 'NuGet'}
      if (!$nugetPackageProvider) {
        Get-PackageProvider -Name NuGet -Force | Out-Null
        $Ansible.Changed = $true
      }

- name: Trust the PSGallery PSRepository
  ansible.windows.win_powershell:
    # see https://www.powershellgallery.com
    script: |
      Set-StrictMode -Version Latest
      # NB we cannot set this to Stop because something is broken inside
      #    Get-PSRepository that causes it to fail with:
      #       PowerShell Gallery is currently unavailable.  Please try again later.
      $ErrorActionPreference = 'Continue'
      $ProgressPreference = 'SilentlyContinue'
      $Ansible.Changed = $false
      $repository = Get-PSRepository -Name PSGallery
      if (!$repository) {
        Unregister-PSRepository PSGallery -ErrorAction SilentlyContinue
        Register-PSRepository -Default
        $Ansible.Changed = $true
        $repository = Get-PSRepository -Name PSGallery
        if (!$repository) {
          throw "unknown error getting the PSGallery PSRepository"
        }
      }
      if ($repository.InstallationPolicy -ne 'Trusted') {
        Set-PSRepository -Name PSGallery -InstallationPolicy Trusted
        $Ansible.Changed = $true
      }

- name: Install Chocolatey
  chocolatey.chocolatey.win_chocolatey:
    # https://community.chocolatey.org/packages/chocolatey
    name: chocolatey
    # renovate: datasource=nuget:chocolatey depName=chocolatey
    version: '1.4.0'
    state: upgrade

- name: Install DejaVu Mono Nerd Font
  # see https://www.programmingfonts.org/#dejavu
  # see https://www.programmingfonts.org/#meslo
  # see https://www.nerdfonts.com
  # see https://community.chocolatey.org/packages/font-nerd-dejavusansmono
  chocolatey.chocolatey.win_chocolatey:
    name: font-nerd-dejavusansmono
    # renovate: datasource=nuget:chocolatey depName=font-nerd-dejavusansmono
    version: '2.1.0'
    state: upgrade

- name: Configure the Console Font
  # see https://devblogs.microsoft.com/commandline/understanding-windows-console-host-settings/
  block:
    - name: Set the Console font name
      ansible.windows.win_regedit:
        path: HKCU:\Console
        name: FaceName
        data: DejaVuSansMono NF
        type: string
    - name: Set the Console font family
      ansible.windows.win_regedit:
        path: HKCU:\Console
        name: FontFamily
        data: 0x00000036
        type: dword
    - name: Set the Console font size
      ansible.windows.win_regedit:
        path: HKCU:\Console
        name: FontSize
        data: 0x00120000
        type: dword
    - name: Set the Console font weight
      ansible.windows.win_regedit:
        path: HKCU:\Console
        name: FontWeight
        data: 0x00000190
        type: dword

- name: Install pwsh
  ansible.builtin.include_tasks: pwsh.yml

- name: Install oh-my-posh
  chocolatey.chocolatey.win_chocolatey:
    # see https://community.chocolatey.org/packages/oh-my-posh
    # see https://github.com/JanDeDobbeleer/oh-my-posh
    # see https://ohmyposh.dev
    # see also https://starship.rs/
    name: oh-my-posh
    version: '{{ oh_my_posh_version }}'
    package_params: /ALLUSERS
    state: upgrade

- name: Configure oh-my-posh
  ansible.windows.win_copy:
    src: rgl.omp.json
    dest: '%USERPROFILE%\.rgl.omp.json'

- name: Configure Windows PowerShell
  block:
    - name: Create the Windows PowerShell profile directory
      ansible.windows.win_file:
        path: '%USERPROFILE%\Documents\WindowsPowerShell'
        state: directory
    - name: Install the Windows PowerShell profile
      ansible.windows.win_copy:
        src: Microsoft.PowerShell_profile.ps1
        dest: '%USERPROFILE%\Documents\WindowsPowerShell\Microsoft.PowerShell_profile.ps1'

- name: Configure PowerShell
  block:
    - name: Create the PowerShell profile directory
      ansible.windows.win_file:
        path: '%USERPROFILE%\Documents\PowerShell'
        state: directory
    - name: Install the PowerShell profile
      ansible.windows.win_copy:
        src: Microsoft.PowerShell_profile.ps1
        dest: '%USERPROFILE%\Documents\PowerShell\Microsoft.PowerShell_profile.ps1'

- name: Install the Windows Terminal
  ansible.builtin.include_tasks: windows-terminal.yml

- name: Install Notepad3
  chocolatey.chocolatey.win_chocolatey:
    # https://community.chocolatey.org/packages/notepad3
    name: notepad3
    # renovate: datasource=nuget:chocolatey depName=notepad3
    version: '6.23.203.2'
    state: upgrade

- name: Configure Notepad3
  ansible.windows.win_copy:
    src: Notepad3.ini
    dest: '%APPDATA%\Rizonesoft\Notepad3\Notepad3.ini'

- name: Install 7-Zip
  chocolatey.chocolatey.win_chocolatey:
    # https://community.chocolatey.org/packages/7zip.install
    name: 7zip.install
    # renovate: datasource=nuget:chocolatey depName=7zip.install
    version: '22.1'
    state: upgrade

- name: Install dig
  chocolatey.chocolatey.win_chocolatey:
    # https://community.chocolatey.org/packages/bind-toolsonly
    name: bind-toolsonly
    # renovate: datasource=nuget:chocolatey depName=bind-toolsonly
    version: '9.16.28'
    state: upgrade

- name: Install HWiNFO
  chocolatey.chocolatey.win_chocolatey:
    # https://community.chocolatey.org/packages/hwinfo.install
    name: hwinfo.install
    # renovate: datasource=nuget:chocolatey depName=hwinfo.install
    version: '7.46'
    state: upgrade

- name: Install CPU-Z
  chocolatey.chocolatey.win_chocolatey:
    # https://community.chocolatey.org/packages/cpu-z.install
    name: cpu-z.install
    # renovate: datasource=nuget:chocolatey depName=cpu-z.install
    version: '2.5.0.20230314'
    state: upgrade

- name: Install HWMonitor
  chocolatey.chocolatey.win_chocolatey:
    # https://community.chocolatey.org/packages/hwmonitor
    name: hwmonitor
    # renovate: datasource=nuget:chocolatey depName=hwmonitor
    version: '1.50.0.20230303'
    state: upgrade

- name: Install Firefox
  ansible.builtin.include_tasks: firefox.yml

- name: Install Meld
  chocolatey.chocolatey.win_chocolatey:
    # https://community.chocolatey.org/packages/meld
    name: meld
    # renovate: datasource=nuget:chocolatey depName=meld
    version: '3.22.0'
    state: upgrade

- name: Install Git
  block:
    - name: Install Git
      chocolatey.chocolatey.win_chocolatey:
        # https://community.chocolatey.org/packages/git
        name: git
        version: '{{ git_version }}'
        state: upgrade
        package_params: /GitOnlyOnPath /NoAutoCrlf /SChannel
    - name: Configure Git
      ansible.windows.win_powershell:
        script: |
          Set-StrictMode -Version Latest
          $ErrorActionPreference = 'Stop'
          $ProgressPreference = 'SilentlyContinue'
          $Ansible.Changed = $false
          function Set-GitConfig($name, $value) {
            $currentValue = git config --global $name
            if ($LASTEXITCODE -or $currentValue -cne $value) {
              git config --global $name ($value -replace '\\','\\' -replace '"','\"')
              if ($LASTEXITCODE) {
                throw "failed to execute git config with exit code $LASTEXITCODE"
              }
              $Ansible.Changed = $true
            }
          }
          Set-GitConfig user.name 'Rui Lopes'
          Set-GitConfig user.email 'rgl@ruilopes.com'
          Set-GitConfig diff.guitool meld
          Set-GitConfig difftool.meld.path 'C:/Program Files (x86)/Meld/Meld.exe'
          Set-GitConfig difftool.meld.cmd '"C:/Program Files (x86)/Meld/Meld.exe" "$LOCAL" "$REMOTE"'
          Set-GitConfig merge.tool meld
          Set-GitConfig mergetool.meld.path 'C:/Program Files (x86)/Meld/Meld.exe'
          Set-GitConfig mergetool.meld.cmd '"C:/Program Files (x86)/Meld/Meld.exe" "$LOCAL" "$BASE" "$REMOTE" --auto-merge --output "$MERGED"'

- name: Install Git Extensions
  block:
    - name: Install Git Extensions
      chocolatey.chocolatey.win_chocolatey:
        # https://community.chocolatey.org/packages/gitextensions
        name: gitextensions
        # renovate: datasource=nuget:chocolatey depName=gitextensions
        version: '4.1.0'
        state: upgrade
    - name: Configure Git Extensions
      ansible.windows.win_powershell:
        script: |
          Set-StrictMode -Version Latest
          $ErrorActionPreference = 'Stop'
          $ProgressPreference = 'SilentlyContinue'
          $Ansible.Changed = $false
          function Set-GitExtensionsStringSetting($name, $value) {
            $settingsPath = "$env:APPDATA\GitExtensions\GitExtensions\GitExtensions.settings"
            [xml]$settingsDocument = Get-Content $settingsPath
            $node = $settingsDocument.SelectSingleNode("/dictionary/item[key/string[text()='$name']]")
            if (!$node) {
              $node = $settingsDocument.CreateElement('item')
              $node.InnerXml = "<key><string>$name</string></key><value><string/></value>"
              $settingsDocument.dictionary.AppendChild($node) | Out-Null
            }
            if ($value -cne $node.value.string) {
              $node.value.string = $value
              $settingsDocument.Save($settingsPath)
              $Ansible.Changed = $true
            }
          }
          Set-GitExtensionsStringSetting TelemetryEnabled false
          Set-GitExtensionsStringSetting translation English
          Set-GitExtensionsStringSetting gitbindir 'C:\Program Files\Git\bin\'

- name: Install Wireshark
  block:
    - name: Install Wireshark
      chocolatey.chocolatey.win_chocolatey:
        # https://community.chocolatey.org/packages/wireshark
        name: wireshark
        # renovate: datasource=nuget:chocolatey depName=wireshark
        version: '4.0.6'
        state: upgrade
    - name: Install Wireshark Desktop shortcut
      community.windows.win_shortcut:
        src: C:\Program Files\Wireshark\Wireshark.exe
        dest: '%USERPROFILE%\Desktop\Wireshark.lnk'

# download npcap to the desktop for the user to install manually
# (it does not have a silent installer) iif the installed version
# is different than the expected one.
# see https://nmap.org/npcap/#download
# see https://github.com/nmap/npcap/releases
- name: Download npcap
  block:
    - name: Check npcap
      ansible.windows.win_powershell:
        script: |
          Set-StrictMode -Version Latest
          $ErrorActionPreference = 'Stop'
          $ProgressPreference = 'SilentlyContinue'
          $Ansible.Changed = $false
          $npcapVersion = '{{ npcap_version }}'
          $npcapPath = 'C:\Program Files\Npcap\npcap.sys'
          if (Test-Path $npcapPath) {
            $actualVersion = (Get-ChildItem $npcapPath).VersionInfo.ProductVersion
            $Ansible.Changed = $actualVersion -ne $npcapVersion
          } else {
            $Ansible.Changed = $true
          }
      register: npcap
    - name: Download npcap
      when: npcap.changed
      ansible.windows.win_get_url:
        dest: '%USERPROFILE%\Desktop\npcap-{{ npcap_version }}.exe'
        url: 'https://npcap.com/dist/npcap-{{ npcap_version }}.exe'

- name: Install Autoruns
  chocolatey.chocolatey.win_chocolatey:
    # https://community.chocolatey.org/packages/autoruns
    # see https://learn.microsoft.com/en-us/sysinternals/downloads/autoruns
    # NB setting the version is moot because the upstream is not versioned.
    name: autoruns

- name: Install Process Explorer
  chocolatey.chocolatey.win_chocolatey:
    # https://community.chocolatey.org/packages/procexp
    # see https://learn.microsoft.com/en-us/sysinternals/downloads/process-explorer
    # NB setting the version is moot because the upstream is not versioned.
    name: procexp

- name: Install Process Monitor
  chocolatey.chocolatey.win_chocolatey:
    # https://community.chocolatey.org/packages/procmon
    # see https://learn.microsoft.com/en-us/sysinternals/downloads/procmon
    # NB setting the version is moot because the upstream is not versioned.
    name: procmon

- name: Install WinObj
  chocolatey.chocolatey.win_chocolatey:
    # https://community.chocolatey.org/packages/winobj
    # see https://learn.microsoft.com/en-us/sysinternals/downloads/winobj
    # NB setting the version is moot because the upstream is not versioned.
    name: winobj

- name: Install Dependencies
  chocolatey.chocolatey.win_chocolatey:
    # https://community.chocolatey.org/packages/dependencies
    # see https://github.com/lucasg/Dependencies/releases
    name: dependencies
    # renovate: datasource=nuget:chocolatey depName=dependencies
    version: '1.11.1'
    state: upgrade

- name: Configure the firewall
  block:
    - name: Allow ICMPv4 Echo (ping)
      community.windows.win_firewall_rule:
        name: ICMPv4 Echo Request (ICMPv4-In)
        enabled: true
        action: allow
        direction: in
        protocol: icmpv4
        icmp_type_code:
          - '8:*'
        profiles:
          - domain
          - private

# TODO install a prometheus exporter for monitoring the cpu temperature, cpu frequency, chassis temperature, and hardware errors
